<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Robot Framework-[ ERROR ] Suite 'TestProject' contains no tests matching name]]></title>
    <url>%2F2020%2F08%2F12%2F%5B%20ERROR%20%5D%20Suite%20'TestProject'%20contains%20no%20tests%20matching%20name%2F</url>
    <content type="text"><![CDATA[编写用例完成，运行测试用例，运行完成报错：1[ ERROR ] Suite &apos;TestProject&apos; contains no tests matching name &apos;TestProject.TestSuites.baidu_search&apos; in suite &apos;TestProject.TestSuites&apos;. 如图： 原因：是由于在创建测试套件（test suite）时，格式选择为TXT文件格式导致 解决办法：将文件修改为robot格式即可。]]></content>
      <categories>
        <category>问题+解决方法记录</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Robot Framework--第一个脚本]]></title>
    <url>%2F2020%2F08%2F12%2FRobot-Framework-%E7%AC%AC%E4%B8%80%E4%B8%AA%E8%84%9A%E6%9C%AC%2F</url>
    <content type="text"><![CDATA[1.Robot Framework介绍Robot Framework的架构是一个通用的验收测试和验收测试驱动开发的自动化测试框架（ATDD）。它具有易于使用的表格来组织测试过程和测试数据。 它使用关键字驱动的测试方法。对于上面的例子来说，Open Browser、input text、click element、sleep、Get Title、Should Contain和close browser，都是“关键字”，这些关键字由robotframework-selenium2library类库所提供。当然我们也可以自定义关键字。Robot Framework的操作系统和应用独立框架。核心框架是使用Python和运行在Jython(JVM)和IronPython(.NET) 2.Robot Framework入门下面一步一步来创建我们的第一条用例 1.创建测试项目选择菜单栏file—-&gt;new Project, Name 输入项目名称,Type 选择Directory 2.创建测试套件右键点击“测试项目”选择new Suite选项，Name 输入项目名称，Type 选择File，Format选择ROBOT（如果选的是TXT格式，运行用例时会报错） 3.创建测试用例右键点击“测试套件”选择new Test Case,点击OK即可。 导入Selenium2Library库 因为RF框架编写基于web 的测试用例，所以，我们需要selenium 的库支持。所以，我们在使用的过程中需要加载Selenium2Library库 在“测试套件”的Edit标签页，点击“Library”按钮，弹出输入框，Name输入：Selenium2Library，点击OK完成。如果导入的库显示红色，表示导入的库不存在。如果是黑色则表示导入成功。注意区分大小写。 5.编写用例下面就可以写我们的用例了，可以通过F5快捷键来查询库提供的关键字。 如上图，自动化脚本从打开浏览器开始，我想打开一个浏览器，自然想到的是以“open”为关键字搜索，结果找到了“Open Browser”的关键字，点击这个关键字，显示它的用法和说明。下面开始实操创建百度搜索用例如下： “Open Browser”变蓝了，说明它是一个合法的关键字，后面有一个方框是红色的，表示这个参数不能缺省的。通过说明信息中，发现它需要一个url 地址是必填的，当然还需要指定browser （默认不填为 friefox） 6.运行测试用例勾选当前需要运行的测试用例，点击工具栏运行按钮，如果只运行单个用例的话，也可以切换到用例的Run标签页，点击“start”按钮。 运行信息： 运行信息显示会生成三个文件：Output.xml、Log.html、Report.html我们重点查看Log.html和Report.html ，Log.html更关注脚本的执行过程的记录，Report.html更关注脚本的执行结果的展示。]]></content>
      <categories>
        <category>Robot Framework</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Robot Framework-python3.8与ride不兼容问题]]></title>
    <url>%2F2020%2F08%2F12%2Fpython3.8%E4%B8%8Eride%E4%B8%8D%E5%85%BC%E5%AE%B9%E9%97%AE%E9%A2%98%2F</url>
    <content type="text"><![CDATA[robotframework环境搭建完成，运行ride报错 1、robotframework 环境（pip list）：python 3.8.2robotframework 3.2.1wxpython 4.0.7ride 1.7.4.2 2、运行ride报错 百度上找了一圈，有人说是robotframework-ride最新版本1.7.4.2 不兼容 python 3.8，后来把1.7.4.2版本的卸载了1pip uninstall robotframework 又重新指定版本安装1.7.4.1的试试看：1pip install robotframework-ride==1.7.4.1 终于装上了！ 然而又报了新的错误… 又继续百度说是系统语言的问题，在 robotide 中找到应用程序配置项Lib\site-packages\robotide\application\application.py，看到初始加载的语言环境是英文。 加上一个局部支持的语言试试 把修改application.py中 self._initial_locale = wx.Locale(wx.LANGUAGE_ENGLISH)改为：1self.locale = wx.Locale(wx.LANGUAGE_ENGLISH) 又出现了新的问题.. 这次报的是缩进的问题，源码缩进格式不正确，简单粗暴的复制下面没问题的源码缩进，终于终于运行能够打开了！]]></content>
      <categories>
        <category>问题+解决方法记录</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[RIDE桌面快捷方式制作]]></title>
    <url>%2F2020%2F08%2F12%2FRIDE%E6%A1%8C%E9%9D%A2%E5%BF%AB%E6%8D%B7%E6%96%B9%E5%BC%8F%E5%88%B6%E4%BD%9C%2F</url>
    <content type="text"><![CDATA[接上一篇笔记0.0 1.创建快捷方式 在桌面右键鼠标，弹出的菜单选择 新建-快捷方式，然后在请键入对象的位置输入这一行命令 D:\Python38\pythonw.exe -c “from robotide import main; main()” 注：根据自己安装python的路径，我的是在D盘的，还有双引号记得是英文格式哦，否则会启动不了哦 如图： 点击下一步，输入快捷方式的名称，根据自己需要随意命名就好。 点击完成后会在桌面生成图标 2.如果想要把图标换成机器人图标需要快捷方式上点击右键-属性，如图 点击“更改图标”，在浏览里找到目录D:\Python38\Lib\site-packages\robotide\widgets，里面有个robot.ico的图标 选它就可以了，效果如图 最后快捷方式就制作完成了，可以打开正常使用了。]]></content>
      <categories>
        <category>Robot Framework</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Robot Framework环境搭建]]></title>
    <url>%2F2020%2F08%2F11%2FRobot%20Framework%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%2F</url>
    <content type="text"><![CDATA[1.Python3.8安装下载地址：https://www.python.org/downloads/release/python-381/ python-3.8.1.amd64.msi(python2官方已宣布到2020年元旦起不再维护，所以为了以后方便在这里安装python3) 下载完成后，选择安装路径自行安装即可。安装完成后注意配置系统环境变量path:配置Python38安装路径和Python38/Scripts路径。 2.Robot framework的安装RF框架是基于python的，所以一定要有python环境 安装方式选择一种即可： （1）exe包安装下载地址：https://pypi.org/project/robotframework/3.2.1/#downloads robotframework-3.2.1.win-amd64.exe 直接双击下一步即可。 （2）pip命令安装1pip install robotframework 这样子会直接安装最新的版本，我们可以指定版本安装pip install robotframework==3.2.1 3.wxPython 的安装作用：Wxpython 是python 非常有名的一个GUI库，因为RIDE 是基于这个库开发的，所以这个必须安装。 （1）exe包安装下载地址：http://sourceforge.net/projects/wxpython/files/wxPython/ 直接双击下一步即可。 （2）pip命令安装1pip install wxPython==4.0.7 在线安装 wxPython，最好指定版本安装，否则会直接安装最新的版本 （这个版本不能太低…太低不支持python3.8，太高也会报错…所以找了个版本不高，又支持3.8的wxPython==4.0.7） 4.Robot framework-ride作用：RIDE就是一个图形界面的用于创建、组织、运行测试的软件。 安装方式选一种即可： （1）包安装下载地址：https://pypi.python.org/pypi/robotframework-ride robotframework-ride-1.7.4.2.tar.gz 下载完成后将其解压，然后进入到解压后的文件路径进行安装123cd D:\robotframework-ride-1.7.4.2python setup.py install （2）pip安装1pip install robotframework-ride=1.7.4.1（安装了最新的1.7.4.2一直报错，所以我这里装的是1.7.4.1） 5.Robot framework-selenium2library作用：RF-seleniumlibrary 可以看做RF版的selenium 库，selenium （webdriver）可以认为是一套基于web的规范（API），所以，RF 、appium 等测试工具都可以基于这套API进行页面的定位与操作。 （1）包安装下载地址：https://github.com/robotframework/Selenium2Library#readme Selenium2Library-master.zip 下载完成后将其解压，然后进入到解压后的文件路径进行安装 12cd D:\Selenium2Library-masterpython setup.py install （2）pip安装1pip install robotframework-selenium2library 6.放入驱动以上步骤都已安装完毕后，把需要用的驱动放到python3的目录下，用谷歌浏览器较多，所以我把谷歌驱动文件chromedriver.exe放入我的python3安装目录D:\Python38\Scripts 7.查看pybot版本12cd D:\Python38\Scriptspybot --version 8.启动RIDE 1.通过文件启动（双击D:\Python38\Lib\site-packages\robotide下的init.py文件） 2.通过命令启动（运行-&gt;ride.py回车/确认，打开ride.py文件之后（以python方式打开 ） 12cd D:\Python38\Scripts\python ride.py 3.将D:\Python38\Scripts\ride.py创建快捷键 注：根据自己的python安装路径，我的是在D盘的]]></content>
      <categories>
        <category>Robot Framework</category>
      </categories>
  </entry>
</search>
